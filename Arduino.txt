// Incluimos librerias a ultilizar
#include "OneWire.h"
#include "DallasTemperature.h"
#include "LiquidCrystal.h"

// Creamos conexion con el pin 2 del termometro
OneWire onewire(2);

// pasamos la conexion a la libreria DallasTemperature [para que se encargue de los calculos]
DallasTemperature sensors(&onewire);

//definimos pines de  la pantalla lcd
LiquidCrystal lcd(13, 12, 11, 10, 9, 8, 7);

// definimos pines del medidor de pH
int entrada_A0;
float voltaje;

#include <SoftwareSerial.h>  // libreria que permite establecer pines digitales
                             // para comunicacion serie
#include <ArduinoBlue.h>


#define TX 15
// Bluetooth RX -> Arduino D7
#define RX 14

int prevThrottle = 49;
int prevSteering = 49;
int throttle, steering, sliderVal, button, sliderId;

SoftwareSerial bluetooth(TX, RX);
ArduinoBlue phone(bluetooth);  // pass reference of bluetooth object to ArduinoBlue constructor.
int DATO = 0;                  // variable para almacenar caracter recibido

void setup() {
  Serial.begin(9600);
  // iniciamos libreria:
  sensors.begin();

  // iniciamos lcd
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  lcd.print("iniciando");
  bluetooth.begin(9600);
  delay(3000);


  lcd.setCursor(0, 0);
  lcd.print("         ");
  lcd.setCursor(0, 0);
  lcd.print("Listo");
  delay(3000);
}

void loop() {
  // Mandamos a pedir la conversion de temperatura de la señal
  sensors.requestTemperatures();

  // definimos variable en temperaturas celcius
  int tempC = sensors.getTempCByIndex(0);  // el 0 indica el primer dispisitivo

  // calibracion del modulo pH
  entrada_A0 = analogRead(A0);
  voltaje = (entrada_A0 * 5.0) / 1024.0;

  // PH_step (Voltage/pH Unit) = (Voltage@PH7-Voltage@PH4)/(PH7 - PH4)
  float pH = 7 + (( 4.3- voltaje) / 0.1841);  // PH_probe = PH7-((Voltage@PH7-Voltage@probe)/PH_step)

  // imprimimos resultados
  lcd.setCursor(0, 0);
  lcd.print("Temp:");
  lcd.setCursor(5, 0);
  lcd.print(tempC);
  lcd.print("C");

  lcd.setCursor(0, 1);
  lcd.print("pH:");
  lcd.setCursor(3,1);
  lcd.print(pH);

  Serial.print("pH ");
  Serial.println(pH);
  Serial.print("c ");

  Serial.println(tempC);

  char result[8];  // Buffer suficientemente grande para un float de 7 caracteres
  dtostrf(pH, 6, 2, result);  // Deja espacio para números

  char result2[8];  // Buffer suficientemente grande para un float de 7 caracteres
  dtostrf(tempC, 6, 2, result2);  // Deja espacio para números

  bluetooth.write("    pH del agua: ");
  bluetooth.write(result);
  bluetooth.write("    Temp: ");
  bluetooth.write(result2);  
  bluetooth.write(" C");
  bluetooth.write('\n');

  if (pH > 8){
    lcd.setCursor(8,1);
    lcd.print(" Alcalina");
    bluetooth.write(" pH Alcalino     ");
  }
  else if (pH < 7){
    lcd.setCursor(8,1);
    lcd.print(" Acida");
    bluetooth.write(" pH Acido     ");

  }
  else{
      lcd.setCursor(8,1);
      lcd.print(" Optimo");
      bluetooth.write(" pH optimo     ");
  }
  
  if(tempC < 25){
    lcd.setCursor(9,0);
    lcd.print(" FRESCA");
    bluetooth.write(" AGUA Fresca     ");
  }
  else if (tempC > 28){
    lcd.setCursor(9,0);
    lcd.print(" Tibia");
    bluetooth.write(" AGUA Tibia     ");
  }
  else if (tempC > 32){
    lcd.setCursor(9,0);
    lcd.print(" Caliente");
    bluetooth.write(" AGUA Caliente     ");
  }
  else if (tempC < 20){
    lcd.setCursor(9,0);
    lcd.print(" FRIA");
    bluetooth.write(" AGUA FRIA     ");
  }
  else{
      lcd.setCursor(9,0);
      lcd.print(" Optimo");
      bluetooth.write(" Optima     "); 
  }


  //esperamos 1 seg
  delay(1000);
}